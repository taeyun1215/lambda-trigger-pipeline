name: Build, Run, Generate OpenAPI Spec, and Upload to S3

on:
  repository_dispatch:
    types: [deploy-trigger]

jobs:
  build_and_generate:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./spring-lambda-mvp # /home/runner/work/lambda-trigger-pipeline/lambda-trigger-pipeline/spring-lambda-mvp

    steps:
      # spring-lambda-mvp 레포지토리의 코드 체크아웃
      - name: Checkout spring-lambda-mvp Repository
        uses: actions/checkout@v2
        with:
          repository: taeyun1215/spring-lambda-mvp
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: spring-lambda-mvp # /home/runner/work/lambda-trigger-pipeline/lambda-trigger-pipeline/spring-lambda-mvp

      # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Gradle로 spring-lambda-mvp 레포지토리 빌드
      - name: Build with Gradle
        run: ./gradlew build

      # spring-lambda-mvp 레포지토리의 Spring Boot 시작
      - name: Start Spring Boot
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
        run: nohup ./gradlew bootRun &

      # Spring Boot 시작 대기
      - name: Wait for Spring Boot to start
        run: sleep 15

      # OpenAPI 스펙 생성
      - name: Generate OpenAPI Spec
        run: curl -o openapi.json http://localhost:8080/v3/api-docs

      # OpenAPI 스펙 인코딩
      - name: Encode OpenAPI Spec
        run: base64 openapi.json > openapi_base64.json

      # OpenAPI Spec과 JAR 파일을 S3에 업로드
      - name: Upload Artifacts to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          JAR_FILE: 'demo-0.0.1-SNAPSHOT.jar'
        run: |
          aws s3 cp openapi.json s3://$S3_BUCKET_NAME/openapi.json
          aws s3 cp openapi_base64.json s3://$S3_BUCKET_NAME/openapi_base64.json
          aws s3 cp build/libs/$JAR_FILE s3://$S3_BUCKET_NAME/$JAR_FILE
