name: Deploy Lambda Function and API Gateway

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload JAR to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-northeast-2'
        run: |
          aws s3 cp build/libs/demo-0.0.1-SNAPSHOT.jar s3://spring-aws-lambda/demo-0.0.1-SNAPSHOT.jar

      - name: Start Spring Boot and Generate OpenAPI Spec
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
        run: |
          nohup ./gradlew bootRun &
          sleep 30
          curl -o openapi.json http://localhost:8080/v3/api-docs

      - name: Upload OpenAPI Spec to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-northeast-2'
        run: |
          aws s3 cp openapi.json s3://spring-aws-lambda/openapi.json

      - name: Create or Update API Gateway and Integrate with Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-northeast-2'
        run: |
          chmod +x deploy.sh
          ./deploy.sh
