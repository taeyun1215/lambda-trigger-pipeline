name: Create or Update API Gateway

on:
  workflow_dispatch:

jobs:
  setup_api_gateway:
    runs-on: ubuntu-latest

    steps:
      # 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # API Gateway 생성 또는 업데이트
      - name: Create or Update API Gateway
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          API_GATEWAY_NAME: ${{ secrets.API_GATEWAY_NAME }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          # 변수 설정
          STAGE_NAME="prod"
          OPENAPI_FILE="openapi_base64.json"

          # S3에서 OpenAPI 파일 다운로드
          aws s3 cp s3://$S3_BUCKET_NAME/openapi_base64.json .

          # API Gateway ID 가져오기
          API_GATEWAY_ID=$(aws apigateway get-rest-apis --query "items[?name=='${API_GATEWAY_NAME}'].id" --output text --region $AWS_REGION)

          echo "API_GATEWAY_ID: ${API_GATEWAY_ID}"

          if [ -z "$API_GATEWAY_ID" ] || [ "$API_GATEWAY_ID" == "None" ]; then
            echo "Creating new API Gateway..."
            # API Gateway 생성
            API_BODY=$(cat ${OPENAPI_FILE})
            API_GATEWAY_ID=$(aws apigateway import-rest-api --body "$API_BODY" --query 'id' --output text --region $AWS_REGION)
          else
            echo "Updating existing API Gateway..."
            # API Gateway 업데이트
            API_BODY=$(cat ${OPENAPI_FILE})
            aws apigateway put-rest-api --rest-api-id $API_GATEWAY_ID --mode overwrite --body "$API_BODY" --region $AWS_REGION
          fi

          # API Gateway 이름 설정 (생성 후 및 업데이트 후 모두)
          aws apigateway update-rest-api --rest-api-id $API_GATEWAY_ID --patch-operations op=replace,path=/name,value="${API_GATEWAY_NAME}" --region $AWS_REGION

          echo "Updated API_GATEWAY_ID: ${API_GATEWAY_ID}"

          # 배포
          aws apigateway create-deployment --rest-api-id $API_GATEWAY_ID --stage-name $STAGE_NAME --region $AWS_REGION
