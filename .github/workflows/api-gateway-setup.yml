name: Setup API Gateway

on:
  workflow_run:
    workflows: ["Deploy Lambda Function"]
    types:
      - completed

jobs:
  setup_api_gateway:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}
      API_GATEWAY_NAME: ${{ secrets.API_GATEWAY_NAME }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      STAGE_NAME: "prod"
      OPENAPI_FILE: "openapi_base64.json"

    steps:
      # 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # S3에서 OpenAPI 파일 다운로드
      - name: Download OpenAPI Spec from S3
        run: aws s3 cp s3://$S3_BUCKET_NAME/$OPENAPI_FILE .

      # API Gateway 생성 또는 업데이트
      - name: Create or Update API Gateway
        run: |
          API_GATEWAY_ID=$(aws apigateway get-rest-apis --query "items[?name=='${API_GATEWAY_NAME}'].id" --output text --region $AWS_REGION)
          echo "API_GATEWAY_ID: ${API_GATEWAY_ID}"

          if [ -z "$API_GATEWAY_ID" ] || [ "$API_GATEWAY_ID" == "None" ]; then
            echo "Creating new API Gateway..."
            API_BODY=$(cat ${OPENAPI_FILE})
            API_GATEWAY_ID=$(aws apigateway import-rest-api --body "$API_BODY" --query 'id' --output text --region $AWS_REGION)
          else
            echo "Updating existing API Gateway..."
            API_BODY=$(cat ${OPENAPI_FILE})
            aws apigateway put-rest-api --rest-api-id $API_GATEWAY_ID --mode overwrite --body "$API_BODY" --region $AWS_REGION
          fi

          aws apigateway update-rest-api --rest-api-id $API_GATEWAY_ID --patch-operations op=replace,path=/name,value="${API_GATEWAY_NAME}" --region $AWS_REGION
          echo "Updated API_GATEWAY_ID: ${API_GATEWAY_ID}"
